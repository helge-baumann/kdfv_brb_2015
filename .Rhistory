# Daten in ./Input
source(
"./Zwischenschritte/1_suf_wsi-brb-2015_datensaetze-laden.R",
encoding = "UTF-8"
) # Branche fehlt noch.
# Unvollständige Skalen labeln (zB I3_1)
source(
"./Zwischenschritte/2_suf_wsi-brb-2015_skalen-labeln.R",
encoding = "UTF-8"
)
# Gewichte und Interviewerdaten mergen und löschen
## Vorläufige Entscheidung: Interviewerkennung, aber keine Int-Variablen
source(
"./Zwischenschritte/3_suf_wsi-brb-2015_daten-mergen.R",
encoding = "UTF-8"
)
source(
"./Zwischenschritte/3b_suf_wsi-brb-2015_fakedaten.R",
encoding = "UTF-8"
) # Datensaetze im Ordner Output/Datensaetze
# Bericht: Fragebogen und Codebuch----------------------------------------------
source(
"./Zwischenschritte/4_suf_wsi-brb-2015_fragebogen.R",
encoding = "UTF-8"
) # Output: "Fragebogen.tex" im Ordner Berichte/Codebuch
source(
"./Zwischenschritte/5_suf_wsi-brb-2015_codebook-rawdata.R",
encoding = "UTF-8"
) # Output: "Codebook_Rawdata.tex" im Ordner Berichte/Codebuch
# Bericht kompilieren-----------------------------------------------------------
source(
"./Zwischenschritte/suf_wsi-brb-2015_datenhandbuch.R",
encoding = "UTF-8"
) # Output: Codebook im Ordner Output
# SessionInfo erzeugen ---------------------------------------------------------
dir.create("./sessionInfo", showWarnings = F)
writeLines(
capture.output(sessionInfo()),
paste0(
"./sessionInfo/",
format(Sys.time(), "%Y-%m-%d"),
"_sessionInfo.txt")
)
table(rawdat$S2)
table(rawdat$S1)
table(safe$S1)
############
# Masterfile zur kontrollierten Datenfernverarbeitung der WSI-Betriebsraetebefragung 2015
# Ersteller: Helge Emmler, WSI
# Letztes Update: 04.03.2020
############
# Präambel --------------------------------------------------------------------
## Pakete ggfs. installieren und laden
library(pacman)
p_load("styler", "labelled", "stringr", "here", "xtable", "tools", "dplyr", "openxlsx")
# f?r read_dta: development Version haven (vorerst)
Sys.setenv(PATH = paste("C:/Rtools/bin", Sys.getenv("PATH"), sep=";"))
devtools::install_github("tidyverse/haven")
library(haven)
# Daten laden und mergen -------------------------------------------------------
# Daten in ./Input
source(
"./Zwischenschritte/1_suf_wsi-brb-2015_datensaetze-laden.R",
encoding = "UTF-8"
) # Branche fehlt noch.
# Unvollständige Skalen labeln (zB I3_1)
source(
"./Zwischenschritte/2_suf_wsi-brb-2015_skalen-labeln.R",
encoding = "UTF-8"
)
# Gewichte und Interviewerdaten mergen und löschen
## Vorläufige Entscheidung: Interviewerkennung, aber keine Int-Variablen
source(
"./Zwischenschritte/3_suf_wsi-brb-2015_daten-mergen.R",
encoding = "UTF-8"
)
source(
"./Zwischenschritte/3b_suf_wsi-brb-2015_fakedaten.R",
encoding = "UTF-8"
) # Datensaetze im Ordner Output/Datensaetze
# Bericht: Fragebogen und Codebuch----------------------------------------------
source(
"./Zwischenschritte/4_suf_wsi-brb-2015_fragebogen.R",
encoding = "UTF-8"
) # Output: "Fragebogen.tex" im Ordner Berichte/Codebuch
source(
"./Zwischenschritte/5_suf_wsi-brb-2015_codebook-rawdata.R",
encoding = "UTF-8"
) # Output: "Codebook_Rawdata.tex" im Ordner Berichte/Codebuch
# Bericht kompilieren-----------------------------------------------------------
source(
"./Zwischenschritte/suf_wsi-brb-2015_datenhandbuch.R",
encoding = "UTF-8"
) # Output: Codebook im Ordner Output
# SessionInfo erzeugen ---------------------------------------------------------
dir.create("./sessionInfo", showWarnings = F)
writeLines(
capture.output(sessionInfo()),
paste0(
"./sessionInfo/",
format(Sys.time(), "%Y-%m-%d"),
"_sessionInfo.txt")
)
# Bericht kompilieren-----------------------------------------------------------
source(
"./Zwischenschritte/suf_wsi-brb-2015_datenhandbuch.R",
encoding = "UTF-8"
) # Output: Codebook im Ordner Output
# SessionInfo erzeugen ---------------------------------------------------------
dir.create("./sessionInfo", showWarnings = F)
writeLines(
capture.output(sessionInfo()),
paste0(
"./sessionInfo/",
format(Sys.time(), "%Y-%m-%d"),
"_sessionInfo.txt")
)
dir("Z:")
dir("Z:/WSI-Datenzentrum")
?make.names
.libPaths("C:/R/library")
library(pacman)
p_load(lobstr)
tracemem()
x <- c(1,2,3)
y <- x
y
x
obj_addr(x)
obj_addr(y)
y[[3]]
y[3]
y[[3]] <- 4
obj_addr(y)
tracemem(y)
z <- y
z[[3]] <- 5
y[[3]] <- 6
y <- y
z[[3]] <- 7
z[[3]] <- 8
untracemem()
untracemem(x)
untracemem(y)
x <- c(1,2,3)
y <- x
x <- c(1,2,3)
tracemem(x)
y <- x
y[[1]] <-
3
y[[2]] <- 3
?tracemem
f <- function(a) {
a
}
z <- f(x)
z
f <- function(a) {
a^2
}
z <- f(x)
tracemem(x)
f <- function(a) {
a^2
}
z <- f(x)
x <- f(x)
x[[3]] <- 1
x[[3]] <- 2
y <- x
y[[2]] <- 3
tracemem(x)
y <- x
y[[2]] <- x
x
y[[2]] <- 3
f <- function(a) {
a^2
}
z <- f(x)
z
z[[2]] <- 3
x <- c(1,2,3)
y <- x
f <- function(a) {
a^2
}
z <- f(x)
obj_addr(x)
obj_addr(z)
x <- c(1,2,3)
y <- x
f <- function(a) {
a
}
z <- f(x)
obj_addr(z)
obj_addr(x)
x <- list(1,2,3)
y <- x
y[[3]] <- 4
ref(x)
ref(y)
sqrt(2)^2==2
near(sqrt(2)^2==2)
?near
p_load(lobstr, dplyr)
near(sqrt(2)^2==2)
near(sqrt(2)^2, 2)
?near
near(3,2,1)
near(3,2,0.5)
near(3,2,2)
X <- data.frame(x=c(1:26), y=letters(), z=paste(x,y))
letters()
Letters()
letters
X <- data.frame(x=c(1:26), y=letters, z=paste(x,y))
c(1:26)
letters
paste(1:26, letters)
X <- data.frame(x=c(1:26), y=letters, z=paste(c(1:26),letters))
X
X <- data.frame(x=c(1:26), y=letters, z=paste0(c(1:26),letters))
X
Y <- X
ref(X)
Y[[3]]
Y["z"]
Y["z"] <- paste0(Y$z, "1")
Y
ref(X)
ref(Y)
Y <- X
Y[3,25] <- "D"
Y[25,3] <- "D"
Y[25,1] <- 20
Y
ref(X)
ref(Y)
Y <- X
Y[25,1] <- 20
ref(X)
ref(Y)
x <- c(1L, 2L, 3L)
tracemem(x)
x[[3]] <- 4
1L
x <- c(1,2,3)
x[[3]] <- 4
x <- c(1,2,3)
tracemem(x)
x <- c(1,2,3)
tracemem(x)
x[[3]] <- 4
x <- c(1L, 2L, 3L)
str(x)
x <- c(1,2,3)
str(x)
tracemem(X)
x[[3]] <- 4
a <- 1:10
b <- list(a, a)
c <- list(b, a, 1:10)
ref(a)
ref(b)
b
b <- list(a, x=a)
ref(b)
b
ref(c)
a <- 1:10
b <- list(a, a)
c <- list(b, a, 1:10)
ref(a)
ref(b)
ref(c)
x <- list(1:10)
x[[2]] <- x
x
ref(x)
obj_size(1)
?obj_size
obj_size(1:10)
?log
log(64, base=2)
2^6
obj_size(1000000000000000000000000000000000000000)
obj_size("Helge")
obj_size("HelgeEmmler")
obj_size("HelgeEmmlerHBS")
obj_size("HelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII")
obj_size("HelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJ")
obj_size("HelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJHelgeEmmlerHBSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJ")
)
X <- rep("HXH", 20)
obj_size(X)
X <- rep("HXH", 40)
obj_size(X)
X <- rep("HXH", 80)
obj_size(X)
X <- rep("HXH", 80^5)
X <- rep("HXH", 2^2)
obj_size(X)
obj_size(rep("Helge", 2^2))
obj_size(rep("Helge", 2^3))
obj_size(rep("Helge", 2^4))
obj_size(rep("Helge", 2^12))
obj_size(rep("Helge", 2^64))
obj_size(rep("Helge", 2^36))
obj_size(rep("Helge", 2^13))
obj_size(rep("Helge", 2^14))
obj_size(rep("Helge", 2^15))
obj_size(rep("Helge", 2^16))
obj_size(rep("Helge", 2^17))
obj_size(rep("Helge", 2^18))
obj_size(rep("Helge", 2^20))
obj_size(rep("Helge", 2^22))
obj_size(rep("Helge", 2^24))
obj_size(rep("Helge", 2^26))
obj_size(1:10)
obj_size(1:2^56)
obj_size(1:2^24)
?object.size
a <- runif(1e6)
obj_size(a)
b <- list(a, a)
obj_size(b)
obj_size(a, b)
b[[1]][[1]] <- 10
obj_size(b)
obj_size(a, b)
b[[2]][[1]] <- 10
obj_size(b)
obj_size(a, b)
a <- runif(1e6)
obj_size(a)
b <- list(a, a)
obj_size(b)
obj_size(a, b)
a
b
str(a)
str(b)
b[[1]][[1]] <- 10
obj_size(b)
obj_size(a, b)
str(a)
str(b)
ref(a)
ref(b)
a <- runif(1e6)
obj_size(a)
b <- list(a, a)
obj_size(b)
obj_size(a, b)
a[[1]]
b[[1]]
b[[1]][[1]]
b[[1]][[1]] <- 10
obj_size(b)
obj_size(a, b)
b[[1]][[1]]
ref(a)
ref(b)
ref(b[[1]])
head(b[{[1]]}])
head(b[[1]]])
head(b[[1]])
head(b[[2]])
?vapply)
?vapply
x <- data.frame(matrix(runif(5 * 1e4), ncol = 5))
medians <- vapply(x, median, numeric(1))
x
head(x)
dim(x)
nrow(x)
for (i in seq_along(medians)) {
x[[i]] <- x[[i]] - medians[[i]]
}
?cat
cat("hallo")
cat("hallo", " ")
cat("hallo welt", " ")
cat("hallo welt", "   ")
seq_along(medians)
?seq_along
length(median)
length(medians)
tracemem(x)
x <- data.frame(matrix(runif(5 * 1e4), ncol = 5))
medians <- vapply(x, median, numeric(1))
x <- data.frame(matrix(runif(5 * 1e4), ncol = 5))
tracemem(x)
medians <- vapply(x, median, numeric(1))
for (i in seq_along(medians)) {
x[[i]] <- x[[i]] - medians[[i]]
}
?dir()
getwd
getwd()
dir("./Input")
p_load(lobstr, dplyr, haven)
data <- read_dta("./Input/infas_Befragungsdaten_Betriebsrätepanel_4808_20150518_1.dta")
y <- as.list(data)
seq_along(data)
attributes(data["lfd"])
attributes(data[["lfd"])
attributes(data[["lfd"]])
i <- 1
str_detect(attributes(data[[i]])$label, "K")
p_load(lobstr, dplyr, haven, stringr)
str_detect(attributes(data[[i]])$label, "K")
x <- NULL
str_detect(x, "K")
str_detect(x, "K") %>% in T
str_detect(x, "K") %in% in T
str_detect(x, "K") %in%  T
identical(str_detect(x, "K"), T)
identical(str_detect("Klau", "K"), T)
data <- read_dta("./Input/infas_Befragungsdaten_Betriebsrätepanel_4808_20150518_1.dta")
y <- as.list(data)
for(i in seq_along(data)) {
if(identical(str_detect(attributes(data[[i]])$label, "K"), T) print(names(data)[i])
}
data <- read_dta("./Input/infas_Befragungsdaten_Betriebsrätepanel_4808_20150518_1.dta")
y <- as.list(data)
for(i in seq_along(data)) {
if(identical(str_detect(attributes(data[[i]])$label, "K"), T)) print(names(data)[i])
}
if(identical(str_detect(attributes(data[[i]])$label, "offen"), T)) print(names(data)[i])
data <- read_dta("./Input/infas_Befragungsdaten_Betriebsrätepanel_4808_20150518_1.dta")
y <- as.list(data)
for(i in seq_along(data)) {
if(identical(str_detect(attributes(data[[i]])$label, "offen"), T)) print(names(data)[i])
}
data <- read_dta("./Input/infas_Befragungsdaten_Betriebsrätepanel_4808_20150518_1.dta")
tracemem(data)
y <- as.list(data)
for(i in seq_along(data)) {
if(identical(str_detect(attributes(data[[i]])$label, "offen"), T)) print(names(data)[i])
}
data <- read_dta("./Input/infas_Befragungsdaten_Betriebsrätepanel_4808_20150518_1.dta")
tracemem(data)
y <- as.list(data)
for(i in seq_along(data)) {
if(identical(str_detect(attributes(data[[i]])$label, "offen"), T))
data[[i]] <- data[[i]]
}
data <- read_dta("./Input/infas_Befragungsdaten_Betriebsrätepanel_4808_20150518_1.dta")
tracemem(data)
data <- as.list(data)
for(i in seq_along(data)) {
if(identical(str_detect(attributes(data[[i]])$label, "offen"), T))
data[[i]] <- data[[i]]
}
data <- read_dta("./Input/infas_Befragungsdaten_Betriebsrätepanel_4808_20150518_1.dta")
tracemem(data)
system.time(
for(i in seq_along(data)) {
if(identical(str_detect(attributes(data[[i]])$label, "offen"), T))
data[[i]] <- data[[i]]
}
)
data <- read_dta("./Input/infas_Befragungsdaten_Betriebsrätepanel_4808_20150518_1.dta")
y <- as.list(data)
tracemem(y)
system.time(
for(i in seq_along(y)) {
if(identical(str_detect(attributes(y[[i]])$label, "offen"), T))
y[[i]] <- y[[i]]
}
)
str(y)
str(y, max.level=1)
str(y, max.level=0)
str(data, max.level=0)
head(y)
y <- as.data.frame(y)
y
y <- as.list(data)
x <- as.tibble(y)
x <- tibble(y)
x
y
x <- env(a=1, b=2)
x <- rlang::env(a=1, b=2)
x
x$a
y <- x
y$a
x$b
y$b
y$b <- 3
x$b
x <- list()
x[[1]] <- x
x
x <- list(a=c(1,2,3))
x[[1]] <- x
x
x <- rlang::env(a=1, b=2)
tracemem(x)
p_load(bench)
gc()
mem_used()
data <- read_dta("./Input/infas_Befragungsdaten_Betriebsrätepanel_4808_20150518_1.dta")
data <- read_dta("./Input/infas_Befragungsdaten_Betriebsrätepanel_4808_20150518_1.dta")
data <- read_dta("./Input/infas_Befragungsdaten_Betriebsrätepanel_4808_20150518_1.dta")
mem_used()
